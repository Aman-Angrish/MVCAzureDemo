name: GitHub-Actions-Matrix-Run
on: push

jobs:  
  job1:
   runs-on: [windows-latest]
   steps:
      - name: Log node version
        id: identify
        run: |
          echo "::set-output name=runner1::windows-latest"
          echo "::set-output name=runner2::ubuntu-latest"
                   
          $jsonBase = @{}
          $jsonBase.Add("runs_on","aa")
          $jsonBase.Add("runsonbranch","always")
          $jsonBase | ConvertTo-Json
          
          $jsonBase = @{}
          $list = New-Object System.Collections.ArrayList

          $list.Add(@{"runs_on"="aa";"runsonbranch"="always";})
          $list.Add(@{"runs_on"="bb";"runsonbranch"="always";})
          $list.Add(@{"runs_on"="cc";"runsonbranch"="always";})
          $list.Add(@{"runs_on"="dd";"runsonbranch"="always";})

          $customers = @{$list}

          $jsonBase.Add($customers)
          $jsonBase | ConvertTo-Json -Depth 10
          
   outputs:
      runner1: ${{ steps.identify.outputs.runner1 }}
      runner2: ${{ steps.identify.outputs.runner1 }}
  node-versions:
    needs: [job1]
    strategy:
      matrix:
        os: [ "${{ needs.job1.outputs.runner1 }}", "${{ needs.job1.outputs.runner2 }}" ]
#         node-version: [6,8,10]
#         include: 
#           - os: ubuntu-latest
#             node-version: 8
#             is_ubuntu_8: "true"
#         exclude: 
#           - os: ubuntu-latest
#             node-version: 8
#           - os: macos-latest
#             node-version: 6
    runs-on: ${{ matrix.os }}
#     env: 
#       IS_UBUNTU_8: ${{ matrix.is_ubuntu_8 }}
    steps:
      - name: Log node version
        run: node -v
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Log node version after matrix
#         run: |
#           node -v
#           echo $IS_UBUNTU_8
        
