#
name: GitHub-Actions-Matrix-Run
on: push

jobs:  
  jobNew:
    runs-on: [windows-latest]
    steps:
      - run: |
          mkdir code
          cd code
          git init
          git remote add -f origin "https://github.com/Aman-Angrish/MVCAzureDemo"
          git config core.sparseCheckout true
          #echo "MVCAzureDemo/.github/" >> .git/info/sparse-checkout
          cat .github/ >> .git/info/sparsecheckout

          
          git pull origin master
      - run: cd code
#   job1:
#    runs-on: [windows-latest]
#    steps:
#       - name: Log node version
#         id: identify
#         run: |          
#           echo '"Aman"'
#           $jsonBase = @{}
#           $list = New-Object System.Collections.ArrayList

#           $runners = "windows-latest,ubuntu-latest"
#           $runnerList = $runners.split(",")
          
#           foreach($runner in $runnerList){
#             $list.Add(@{"runs_on"="$runner";"runsonbranch"="always";})
#           }      

#           $jsonBase.Add("Data",$list)
#           $jsonBase | ConvertTo-Json -Depth 10
          
   
#   node-versions:
#     needs: [job1]
    
#     strategy:  
#       fail-fast: true
#       matrix:
#         os: [ windows-latest,ubuntu-latest, macOS-latest ]
#     runs-on: ${{ matrix.os }}
      
#     steps:
#       - name: Log node version
#         run: |
#           node -v
#           if [ "$RUNNER_OS" == "macOS" ]; then
#             exit 1
#   job2:
#    needs: [node-versions]
#    runs-on: [windows-latest]
#    steps:
#       - name: Log node version
#         id: identify
#         run: |          
#           node -v
#   job3:
#    needs: [job2]
#    if: always()
#    runs-on: [windows-latest]
#    steps:
#       - name: Log node version
#         id: identify
#         run: |          
#           node -v
